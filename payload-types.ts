/* tslint:disable */
/**
 * This file was automatically generated by Payload CMS.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  name?: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title?: string;
  summary?: string;
  slug?: string;
  author?: string | User;
  publishedDate?: string;
  category?: string | Category;
  tags?: (string | Tag)[];
  layout: (
    | {
        quoteHeader?: string;
        quoteText: string;
        referenceName?: string;
        referenceURL?: string;
        id?: string;
        blockName?: string;
        blockType: 'Quote';
      }
    | {
        content?: {
          [k: string]: unknown;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'Content';
      }
    | {
        title?: string;
        content?: string;
        link?: string;
        id?: string;
        blockName?: string;
        blockType: 'CTA';
      }
    | {
        title?: string;
        content?: string;
        link?: string;
        id?: string;
        blockName?: string;
        blockType: 'Bookmark';
      }
    | {
        media: string | Media;
        size?: 'normal' | 'wide' | 'fullscreen';
        caption?: {
          [k: string]: unknown;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'media';
      }
    | {
        fileName?: string;
        language?: 'go' | 'rust' | 'js' | 'bash';
        highlight?: string;
        code?: string;
        id?: string;
        blockName?: string;
        blockType: 'Code';
      }
  )[];
  status?: 'draft' | 'published';
  meta: {
    title?: string;
    description?: string;
    image?: string | Media;
  };
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string;
  email?: string;
  resetPasswordToken?: string;
  resetPasswordExpiration?: string;
  loginAttempts?: number;
  lockUntil?: string;
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "tags".
 */
export interface Tag {
  id: string;
  name?: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  url?: string;
  filename?: string;
  mimeType?: string;
  filesize?: number;
  width?: number;
  height?: number;
  sizes: {
    thumbnail: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    portrait: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
    hero: {
      url?: string;
      width?: number;
      height?: number;
      mimeType?: string;
      filesize?: number;
      filename?: string;
    };
  };
  createdAt: string;
  updatedAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title?: string;
  summary?: string;
  slug?: string;
  author?: string | User;
  layout: (
    | {
        quoteHeader?: string;
        quoteText: string;
        referenceName?: string;
        referenceURL?: string;
        id?: string;
        blockName?: string;
        blockType: 'Quote';
      }
    | {
        content?: {
          [k: string]: unknown;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'Content';
      }
    | {
        title?: string;
        content?: string;
        link?: string;
        id?: string;
        blockName?: string;
        blockType: 'CTA';
      }
    | {
        title?: string;
        content?: string;
        link?: string;
        id?: string;
        blockName?: string;
        blockType: 'Bookmark';
      }
    | {
        media: string | Media;
        size?: 'normal' | 'wide' | 'fullscreen';
        caption?: {
          [k: string]: unknown;
        }[];
        id?: string;
        blockName?: string;
        blockType: 'media';
      }
    | {
        fileName?: string;
        language?: 'go' | 'rust' | 'js' | 'bash';
        highlight?: string;
        code?: string;
        id?: string;
        blockName?: string;
        blockType: 'Code';
      }
  )[];
  meta: {
    title?: string;
    description?: string;
    image?: string | Media;
  };
  createdAt: string;
  updatedAt: string;
}
